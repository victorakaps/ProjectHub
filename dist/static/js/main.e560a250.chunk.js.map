{"version":3,"sources":["components/layout/SignedInLink.js","store/actions/authActions.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLink","state","firebase","links","uid","Notification","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","handleDelete","e","preventDefault","deleteProject","history","push","icon","trashcanIcon","color","width","ownProps","match","params","data","getFirestore","doc","delete","catch","err","SignIn","email","password","hanleChange","setState","target","value","handleSubmit","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","fireStore","createUserWithEmailAndPassword","res","set","CreateProject","charAt","toUpperCase","slice","toLowerCase","console","log","createProject","autoComplete","authorId","add","Date","App","path","component","exact","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"2RAuBA,IAMeA,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCTV,SAACA,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAGzBC,OACAH,UACAI,MAAK,WACJL,EAAS,CAAEM,KAAM,8BDOVP,EAzBf,SAAsBQ,GACpB,OACE,wBAAIC,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBAEF,4BAEE,uBAAGC,QAASH,EAAMN,SAAlB,YAEF,4BACE,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,2BACvBD,EAAMI,QAAQC,eEAVC,MAbf,WACE,OACE,wBAAIL,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,WAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCiBR,IAOeV,eAPS,SAACe,GACvB,MAAO,CACLV,KAAMU,EAAMC,SAASX,KACrBO,QAASG,EAAMC,SAASJ,WAIbZ,EA1Bf,SAAgBQ,GAAQ,IACdH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QACRK,EAAQZ,EAAKa,IACjB,kBAAC,EAAD,CAAcN,QAASA,IAEvB,kBAAC,EAAD,MAEF,OACE,yBAAKH,UAAU,sBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,mBACrB,yBAAKA,UAAU,WAAf,eAEDQ,O,yBCSME,MA3Bf,SAAsBX,GAAQ,IACpBY,EAAkBZ,EAAlBY,cACR,OACE,yBAAKX,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACXW,GACCA,EAAcC,KAAI,SAACC,GACjB,OACE,wBAAIC,IAAKD,EAAaE,IACpB,0BAAMf,UAAU,aAAaa,EAAaG,KAA1C,KACA,8BAAOH,EAAaI,SACpB,yBAAKjB,UAAU,uBACZkB,IAAOL,EAAaM,KAAKC,UAAUC,oBCD3CC,EAdQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,yBAAKvB,UAAU,kCACb,yBAAKA,UAAU,wCACb,0BAAMA,UAAU,cAAcuB,EAAQC,OACtC,wCACaD,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,uBAAG1B,UAAU,aAAakB,IAAOK,EAAQI,UAAUP,UAAUQ,eCQtDC,EAfK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,yBAAK9B,UAAU,wBACZ8B,GACCA,EAASlB,KAAI,SAACW,GACZ,OACE,kBAAC,IAAD,CAAMtB,GAAI,YAAcsB,EAAQR,GAAID,IAAKS,EAAQR,IAC/C,kBAAC,EAAD,CAAgBQ,QAASA,U,QCJjCQ,E,uKACM,IAAD,EACmCC,KAAKjC,MAAvC+B,EADD,EACCA,SAAUlC,EADX,EACWA,KAAMe,EADjB,EACiBA,cACxB,OAAKf,EAAKa,IAER,yBAAKT,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAa8B,SAAUA,KAGzB,yBAAK9B,UAAU,wBACb,kBAAC,EAAD,CAAcW,cAAeA,OATf,kBAAC,IAAD,CAAUV,GAAG,gB,GAHfgC,aA4BTC,cACb3C,aATsB,SAACe,GACvB,MAAO,CACLwB,SAAUxB,EAAM6B,UAAUC,QAAQN,SAClClC,KAAMU,EAAMC,SAASX,KACrBe,cAAeL,EAAM6B,UAAUC,QAAQzB,kBAMzC0B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbH,G,mCC/BIU,E,4MACJC,aAAe,SAACC,GAAO,IACb5B,EAAO,EAAKhB,MAAZgB,GACR4B,EAAEC,iBACF,EAAK7C,MAAM8C,cAAc9B,GACzB,EAAKhB,MAAM+C,QAAQC,KAAK,M,uDAEhB,IAAD,EACmBf,KAAKjC,MAAvBwB,EADD,EACCA,QACR,OAFO,EACU3B,KACPa,IACNc,EAEA,yBAAKvB,UAAU,qCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,cAAcuB,EAAQC,OACtC,2BAAID,EAAQN,UAEd,yBAAKjB,UAAU,wCACb,0CACauB,EAAQE,gBADrB,IACuCF,EAAQG,eAC7C,kBAAC,OAAD,CAAMsB,KAAMC,IAAcC,MAAM,MAAMlD,UAAU,mBAAmBmD,MAAM,OAAOjD,QAAS8B,KAAKU,gBAEhG,6BAAMxB,IAAOK,EAAQI,UAAUP,UAAUQ,eAQ/C,yBAAK5B,UAAU,oBACb,kDAvBgB,kBAAC,IAAD,CAAUC,GAAG,gB,GATVgC,aAwDdC,cACb3C,aAlBsB,SAACe,EAAO8C,GAC9B,IAAMrC,EAAKqC,EAASC,MAAMC,OAAOvC,GAC3Be,EAAWxB,EAAM6B,UAAUoB,KAAKzB,SAEtC,MAAO,CACLf,GAAIA,EACJQ,QAHcO,EAAWA,EAASf,GAAM,KAIxCnB,KAAMU,EAAMC,SAASX,SAIG,SAACJ,GAC3B,MAAO,CACLqD,cAAe,SAAC9B,GAAD,OAAQvB,ECvCE,SAACuB,GAC5B,OAAO,SAACvB,EAAUE,EAAX,GAAuD,EAAhCC,aACV6D,EAD0C,EAAnBA,gBAItClB,WAAW,YACXmB,IAAI1C,GACJ2C,SACA7D,MAAK,WACJL,EAAS,CAAEM,KAAM,iBAAkBiB,UAEpC4C,OAAM,SAACC,GACNpE,EAAS,CAAEM,KAAM,uBAAwB8D,YD2Bbf,CAAc9B,SAMhDsB,2BAAiB,CAAC,CAAEC,WAAY,cAFnBJ,CAGbO,G,QEjEIoB,E,4MACJvD,MAAQ,CACNwD,MAAO,GACPC,SAAU,I,EAEZC,YAAc,SAACrB,GACb,EAAKsB,SAAL,eACGtB,EAAEuB,OAAOnD,GAAK4B,EAAEuB,OAAOC,S,EAG5BC,aAAe,SAACzB,GACdA,EAAEC,iBACF,EAAK7C,MAAMsE,OAAO,EAAK/D,Q,uDAEf,IAAD,EACqB0B,KAAKjC,MAAzBuE,EADD,EACCA,UACR,OAFO,EACY1E,KACVa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAMuE,SAAUvC,KAAKoC,aAAcpE,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOwE,QAAQ,SAAf,SACA,2BAAO1E,KAAK,QAAQiB,GAAG,QAAQ0D,SAAUzC,KAAKgC,eAEhD,yBAAKhE,UAAU,eACb,2BAAOwE,QAAQ,YAAf,YACA,2BAAO1E,KAAK,WAAWiB,GAAG,WAAW0D,SAAUzC,KAAKgC,eAEtD,yBAAKhE,UAAU,eACb,4BAAQA,UAAU,kCAAlB,UACA,yBAAKA,UAAU,mBACZsE,EAAY,2BAAIA,GAAiB,oC,GAhC3BrC,aAqDN1C,eAZS,SAACe,GACvB,MAAO,CACLgE,UAAWhE,EAAMV,KAAK0E,UACtB1E,KAAMU,EAAMC,SAASX,SAIE,SAACJ,GAC1B,MAAO,CACL6E,OAAQ,SAACK,GAAD,OAAWlF,GTtDAmF,ESsDgBD,ETrD9B,SAAClF,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAGzBC,OACAgF,2BAA2BD,EAAYb,MAAOa,EAAYZ,UAC1DlE,MAAK,WACJL,EAAS,CAAEM,KAAM,qBAElB6D,OAAM,SAAChB,GACNnD,EAAS,CAAEM,KAAM,cAAe6C,YAVlB,IAACgC,MSyDRpF,CAA6CsE,GCpDtDgB,E,4MACJvE,MAAQ,CACNwD,MAAO,GACPC,SAAU,GACVe,UAAW,GACXC,SAAU,I,EAEZf,YAAc,SAACrB,GACb,EAAKsB,SAAL,eACGtB,EAAEuB,OAAOnD,GAAK4B,EAAEuB,OAAOC,S,EAG5BC,aAAe,SAACzB,GACdA,EAAEC,iBACF,EAAK7C,MAAMiF,OAAO,EAAK1E,Q,uDAEf,IAAD,EACqB0B,KAAKjC,MAAzBH,EADD,EACCA,KAAM0E,EADP,EACOA,UACd,OAAI1E,EAAKa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAMuE,SAAUvC,KAAKoC,aAAcpE,UAAU,SAC3C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOwE,QAAQ,aAAf,cACA,2BAAO1E,KAAK,OAAOiB,GAAG,YAAY0D,SAAUzC,KAAKgC,eAEnD,yBAAKhE,UAAU,eACb,2BAAOwE,QAAQ,YAAf,aACA,2BAAO1E,KAAK,OAAOiB,GAAG,WAAW0D,SAAUzC,KAAKgC,eAElD,yBAAKhE,UAAU,eACb,2BAAOwE,QAAQ,SAAf,SACA,2BAAO1E,KAAK,QAAQiB,GAAG,QAAQ0D,SAAUzC,KAAKgC,eAEhD,yBAAKhE,UAAU,eACb,2BAAOwE,QAAQ,YAAf,YACA,2BAAO1E,KAAK,WAAWiB,GAAG,WAAW0D,SAAUzC,KAAKgC,eAEtD,yBAAKhE,UAAU,eACb,4BAAQA,UAAU,kCAAlB,WACA,yBAAKA,UAAU,mBACZsE,EAAY,2BAAIA,GAAiB,oC,GA1C3BrC,aAgEN1C,eAbS,SAACe,GACvB,MAAO,CACLV,KAAMU,EAAMC,SAASX,KACrB0E,UAAWhE,EAAMV,KAAK0E,cAIC,SAAC9E,GAC1B,MAAO,CACLwF,OAAQ,SAACC,GAAD,OAAazF,EVtCH,SAACyF,GACrB,OAAO,SAACzF,EAAUE,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAa6D,EAAmB,EAAnBA,aACnCjD,EAAWZ,IACXuF,EAAY1B,IAClBjD,EACGX,OACAuF,+BAA+BF,EAAQnB,MAAOmB,EAAQlB,UACtDlE,MAAK,SAACuF,GACL,OAAOF,EACJ5C,WAAW,SACXmB,IAAI2B,EAAIpE,KAAKP,KACb4E,IAAI,CACHP,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB3E,SAAU6E,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAGvDlF,MAAK,WACJL,EAAS,CAAEM,KAAM,sBAElB6D,OAAM,SAAChB,GACNnD,EAAS,CAAEM,KAAM,eAAgB6C,UUiBPqC,CAAOC,QAI1B1F,CAA6CsF,GChEtDS,E,4MACJhF,MAAQ,CACNkB,MAAO,GACPP,QAAS,I,EAEX+C,YAAc,SAACrB,GACb,EAAKsB,SAAL,eACGtB,EAAEuB,OAAOnD,GAAK4B,EAAEuB,OAAOC,MAAMoB,OAAO,GAAGC,cAAgB7C,EAAEuB,OAAOC,MAAMsB,MAAM,GAAGC,iB,EAGpFtB,aAAe,SAACzB,GACdA,EAAEC,iBACF+C,QAAQC,IAAI,EAAKtF,OACjB,EAAKP,MAAM8F,cAAc,EAAKvF,OAC9B,EAAKP,MAAM+C,QAAQC,KAAK,M,uDAIxB,OADiBf,KAAKjC,MAAdH,KACEa,IAER,yBAAKT,UAAU,aACb,0BAAMuE,SAAUvC,KAAKoC,aAAcpE,UAAU,iBAC3C,wBAAIA,UAAU,2BAAd,kBACA,yBAAKA,UAAU,eACb,2BAAOwE,QAAQ,SAAf,SACA,2BAAO1E,KAAK,OAAOiB,GAAG,QAAQ+E,aAAa,MAAMrB,SAAUzC,KAAKgC,eAElE,yBAAKhE,UAAU,eACb,2BAAOwE,QAAQ,WAAf,mBACA,8BACEzD,GAAG,UACHf,UAAU,uBACVyE,SAAUzC,KAAKgC,eAGnB,yBAAKhE,UAAU,eACb,4BAAQA,UAAU,wBAAlB,aAlBc,kBAAC,IAAD,CAAUC,GAAG,gB,GAlBXgC,aAwDb1C,eAZS,SAACe,GACvB,MAAO,CACLV,KAAMU,EAAMC,SAASX,SAIE,SAACJ,GAC1B,MAAO,CACLqG,cAAe,SAACtE,GAAD,OAAa/B,EHzDH,SAAC+B,GAC5B,OAAO,SAAC/B,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IACvDwC,GAAYqB,EAD0C,EAAnBA,gBAEnCrD,EAAUT,IAAWa,SAASJ,QAC9B4F,EAAWrG,IAAWa,SAASX,KAAKa,IAC1C0B,EACGG,WAAW,YACX0D,IAFH,2BAGOzE,GAHP,IAIIE,gBAAiBtB,EAAQ2E,UACzBpD,eAAgBvB,EAAQ4E,SACxBgB,SAAUA,EACVpE,UAAW,IAAIsE,QAEhBpG,MAAK,WACJL,EAAS,CAAEM,KAAM,iBAAkByB,eAEpCoC,OAAM,SAAChB,GACNnD,EAAS,CAAEM,KAAM,uBAAwB6C,UGuCRkD,CAActE,QAIxChC,CAA6C+F,GCjC7CY,E,uKAjBX,OACE,kBAAC,IAAD,KACE,yBAAKlG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmG,KAAK,IAAIC,UAAWrE,EAAWsE,OAAK,IAC3C,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW3D,IACtC,kBAAC,IAAD,CAAO0D,KAAK,UAAUC,UAAWvC,IACjC,kBAAC,IAAD,CAAOsC,KAAK,UAAUC,UAAWvB,IACjC,kBAAC,IAAD,CAAOsB,KAAK,UAAUC,UAAWd,W,GAX3BrD,aCGEqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpD,MACvB,2DClBN,IAAMqD,EAAY,GA8BHC,EA5BK,WAAgC,IAA/BrG,EAA8B,uDAAtBoG,EAAWE,EAAW,uCACjD,OAAQA,EAAO9G,MACb,IAAK,cAEH,OADA6F,QAAQC,IAAI,gBACL,2BAAKtF,GAAZ,IAAmBgE,UAAW,iBAChC,IAAK,gBAEH,OADAqB,QAAQC,IAAI,iBACL,2BAAKtF,GAAZ,IAAmBgE,UAAW,OAChC,IAAK,kBAEH,OADAqB,QAAQC,IAAI,mBACLtF,EACT,IAAK,iBAEH,OADAqF,QAAQC,IAAI,iBACL,2BACFtF,GADL,IAEEgE,UAAW,OAEf,IAAK,eAEH,OADAqB,QAAQC,IAAI,gBACL,2BACFtF,GADL,IAEEgE,UAAWsC,EAAOjE,EAAEkE,UAExB,QACE,OAAOvG,IC1BPoG,EAAY,CAChB5E,SAAU,CACR,CACEf,GAAI,IACJS,MAAO,qBACPP,QACE,yEAEJ,CACEF,GAAI,IACJS,MAAO,wBACPP,QACE,yEAEJ,CACEF,GAAI,IACJS,MAAO,sBACPP,QACE,2EAuBO6F,EAlBQ,WAAgC,IAA/BxG,EAA8B,uDAAtBoG,EAAWE,EAAW,uCACpD,OAAQA,EAAO9G,MACb,IAAK,iBAEH,OADA6F,QAAQC,IAAI,kBAAmBgB,EAAOrF,SAC/BjB,EACT,IAAK,uBAEH,OADAqF,QAAQC,IAAI,uBAAwBgB,EAAOjE,GACpCrC,EACT,IAAK,iBAEH,OADAqF,QAAQC,IAAI,kBACLtF,EACT,IAAK,uBAEL,QACE,OAAOA,I,QCvBEyG,EAPKC,YAAgB,CAClCpH,KAAM+G,EACNpF,QAASuF,EACT3E,UAAW8E,mBACX1G,SAAU2G,oB,wCCIZ3G,IAAS4G,cAXY,CACnBC,OAAQ,0CACRC,WAAY,8CACZC,YAAa,qDACbC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBpH,IAAS4B,YAAYyF,SAAS,CAAEC,uBAAuB,IAExCtH,QAAf,ECIMuH,EAAQC,YACZhB,EACA7E,YACE8F,YAAgBC,IAAMC,kBAAkB,CAAEvI,0BAAa6D,+BACvD2E,yBAAeC,KASbC,EAAW,CACf9H,aACA+H,OAPa,CACbC,YAAa,QACbC,wBAAwB,GAMxBhJ,SAAUsI,EAAMtI,SAChBiJ,mDAGF,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChB/I,EAAOgJ,aAAY,SAACtI,GAAD,OAAWA,EAAMC,SAASX,QACnD,OAAKiJ,mBAASjJ,GACP+I,EADqB,8BAI9BG,IAASC,OACP,kBAAC,IAAD,CAAUjB,MAAOA,GACf,kBAAC,6BAA+BO,EAC9B,kBAACK,EAAD,KACE,kBAAC,EAAD,SAINM,SAASC,eAAe,SL2EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvJ,MAAK,SAAAwJ,GACJA,EAAaC,gBAEd3F,OAAM,SAAA4F,GACL5D,QAAQ4D,MAAMA,EAAM1C,c","file":"static/js/main.e560a250.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\nfunction SignedInLink(props) {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n         {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating mypink\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLink);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const fireStore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((res) => {\r\n        return fireStore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {NavLink } from \"react-router-dom\";\r\n\r\nfunction SignedOutLink() {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">SignUp</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">LogIn</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SignedOutLink;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SignedInLink from \"./SignedInLink\";\r\nimport SignedOutLink from \"./SignedOutLink\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Navbar(props) {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLink profile={profile} />\r\n  ) : (\r\n    <SignedOutLink />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper header\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo left\">\r\n          <div className=\"my-logo\">ProjectHub</div>\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction Notification(props) {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((notification) => {\r\n                return (\r\n                  <li key={notification.id}>\r\n                    <span className=\"pink-text\">{notification.user} </span>\r\n                    <span>{notification.content}</span>\r\n                    <div className=\"grey-test note-date\">\r\n                      {moment(notification.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport Notification from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notification notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { deleteProject } from \"../../store/actions/projectActions\";\r\nimport { Icon } from '@iconify/react';\r\nimport trashcanIcon from '@iconify/icons-octicon/trashcan';\r\n\r\nclass ProjectDetails extends Component {\r\n  handleDelete = (e) => {\r\n    const { id } = this.props;\r\n    e.preventDefault();\r\n    this.props.deleteProject(id);\r\n    this.props.history.push('/')\r\n  };\r\n  render() {\r\n    const { project, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">{project.title}</span>\r\n              <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>\r\n                Posted By {project.authorFirstName} {project.authorLastName}\r\n                <Icon icon={trashcanIcon} color=\"red\" className=\"right delete-btn\" width=\"30px\" onClick={this.handleDelete} />\r\n              </div>\r\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n          <p>Loading Project...</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    id: id,\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDistpacthToProps = (dispatch) => {\r\n  return {\r\n    deleteProject: (id) => dispatch(deleteProject(id)),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDistpacthToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteProject = (id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n      .collection(\"projects\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        dispatch({ type: \"DELETE_PROJECT\", id });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"DELETE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  hanleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.hanleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.hanleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn mypink lighten-1 z-depth-0\">Log In</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : <p></p>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n  hanleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.hanleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.hanleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.hanleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.hanleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn mypink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : <p></p>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchTOProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchTOProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  hanleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1).toLowerCase(),\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"project-color\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" autoComplete=\"off\" onChange={this.hanleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.hanleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn mypink z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\"\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" component={Dashboard} exact />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login failed\");\r\n      return { ...state, authError: \"Login failed\" };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return { ...state, authError: null };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup sucess\")\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.e.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    {\r\n      id: \"1\",\r\n      title: \"help me find peach\",\r\n      content:\r\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Vero, quas.\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"collect all the stars\",\r\n      content:\r\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Vero, quas.\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"egg hunt with yoshi\",\r\n      content:\r\n        \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Vero, quas.\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.e);\r\n      return state;\r\n    case \"DELETE_PROJECT\":\r\n      console.log(\"delete project\");\r\n      return state;\r\n    case \"DELETE_PROJECT_ERROR\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n\r\n// <!-- The core Firebase JS SDK is always required and must be listed first -->\r\n// <script src=\"/__/firebase/7.21.0/firebase-app.js\"></script>\r\n\r\n// <!-- TODO: Add SDKs for Firebase products that you want to use\r\n//      https://firebase.google.com/docs/web/setup#available-libraries -->\r\n// <script src=\"/__/firebase/7.21.0/firebase-analytics.js\"></script>\r\n\r\n// <!-- Initialize Firebase -->\r\n// <script src=\"/__/firebase/init.js\"></script>\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n// import 'firebase/database';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBHIKqxgnkOYGgoEYn9g3rpCgpmbP9c4a0\",\r\n  authDomain: \"victorakaps-project-manager.firebaseapp.com\",\r\n  databaseURL: \"https://victorakaps-project-manager.firebaseio.com\",\r\n  projectId: \"victorakaps-project-manager\",\r\n  storageBucket: \"victorakaps-project-manager.appspot.com\",\r\n  messagingSenderId: \"878790415077\",\r\n  appId: \"1:878790415077:web:05d569f0628770ed013a0c\",\r\n  measurementId: \"G-E8YMM1Y98N\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFirestore,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport firebase from \"firebase/app\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig)\n  )\n);\n\nconst config = {\n  userProfile: \"users\", // where profiles are stored in database,\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div></div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}